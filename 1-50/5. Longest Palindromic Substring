class Solution {
     public String longestPalindrome(String s) {

        if(s.length() < 2) return s;
        int len1, len2;
        int maxlen = 0;
        int start = 0;
        int end = 0;
        int res = 0;
        for (int i = 0; i < s.length(); i++) {
            len1 = expandAroundCenter(s, i, i);
            len2 = expandAroundCenter(s, i, i + 1);
            maxlen = Math.max(len1, len2);
            if(maxlen > end - start){
                start = i - (maxlen-1) / 2;
                end = i + maxlen/2;
            }

        }
        return s.substring(start,end+1);
    }
    private int expandAroundCenter(String s, int firstPointer, int secondPointer){
            int i = firstPointer;
            int j = secondPointer;
            while(i != -1 && j != s.length() && s.charAt(i) == s.charAt(j)){
                i--;
                j++;
            }
            return j - i - 1;
        }
       // return maxlen;
}
